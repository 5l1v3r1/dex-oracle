#!/usr/bin/env ruby
require 'optparse'

require_relative '../lib/dex-oracle'
require_relative '../lib/dex-oracle/smali_input'

def which(cmd)
  exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
  ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
    exts.each do |ext|
      exe = File.join(path, "#{cmd}#{ext}")
      return exe if File.executable?(exe) && !File.directory?(exe)
    end
  end
  nil
end

options = {
    dir: '/data/local',
    device_id: nil,
}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage #{File.basename($0)} [opts] <apk / dex / smali files>"
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-d', '--dir DIR', "Writable device location to execute driver, default=\"#{options[:dir]}\"") do |dir|
    options[:dir] = dir
  end

  opts.on('-i', '--device-id DEV_ID', "Device ID for driver execution") do |id|
    options[:device_id] = id
  end
end

optparse.parse!

if ARGV.size < 1
  puts optparse.help
  exit
end

start = Time.now

input = ARGV[0]
smali_input = SmaliInput.new(input)
oracle = Oracle.new(smali_input.dir)
oracle.divine

FileUtils.rm_rf(smali_input.dir) if smali_input.temporary

puts "Time elapsed #{Time.now - start} seconds"
